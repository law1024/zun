{
    "by": {
        "indent_size": 4
    },
    "fs": {
        "indent": 4,
        "escapeless": true,
        "quotmark": "single"
    },
    "er": {
        "indent": {
            "value": "    ",
            "ArrayExpression": 1,
            "BinaryExpression": 0,
            "ChainedMemberExpression": 0,
            "ConditionalExpression": 1,
            "MultipleVariableDeclaration": 1,
            "ObjectExpression": 1,
            "SwitchCase": 1,
            "SwitchStatement": 1,
            "CatchClause": 1,
            "DoWhileStatement": 1,
            "ForInStatement": 1,
            "ForStatement": 1,
            "FunctionDeclaration": 1,
            "FunctionExpression": 1,
            "IfStatement": 1,
            "IfStatementConditional": 1,
            "TryStatement": 1,
            "WhileStatement": 1,
            "TopLevelFunctionBlock": 1
        },

        "lineBreak": {
            "value": "\n",

            "before": {
              "AssignmentExpression": ">=1",
              "AssignmentOperator": 0,
              "BlockStatement": 0,
              "BlockComment": ">=2",
              "CallExpression": -1,
              "ConditionalExpression": ">=1",
              "CatchOpeningBrace": 0,
              "CatchClosingBrace": ">=1",
              "DeleteOperator": ">=1",
              "DoWhileStatement": ">=1",
              "DoWhileStatementOpeningBrace": 0,
              "DoWhileStatementClosingBrace": ">=1",
              "EmptyStatement": -1,
              "FinallyOpeningBrace": 1,
              "FinallyClosingBrace": ">=1",
              "ForInStatement": ">=1",
              "ForInStatementExpressionOpening": 0,
              "ForInStatementExpressionClosing": 0,
              "ForInStatementOpeningBrace": 0,
              "ForInStatementClosingBrace": ">=1",
              "ForStatement": ">=1",
              "ForStatementExpressionOpening": 0,
              "ForStatementExpressionClosing": "<2",
              "ForStatementOpeningBrace": 0,
              "ForStatementClosingBrace": ">=1",
              "FunctionExpression": 0,
              "FunctionExpressionOpeningBrace": 0,
              "FunctionExpressionClosingBrace": ">=1",
              "FunctionDeclaration": ">=1",
              "FunctionDeclarationOpeningBrace": 0,
              "FunctionDeclarationClosingBrace": ">=1",
              "IfStatement": ">=1",
              "IfStatementOpeningBrace": 0,
              "IfStatementClosingBrace": ">=1",
              "ElseIfStatement": ">=1",
              "ElseIfStatementOpeningBrace": 0,
              "ElseIfStatementClosingBrace": ">=1",
              "ElseStatement": ">=1",
              "ElseStatementOpeningBrace": 0,
              "ElseStatementClosingBrace": ">=1",
              "LogicalExpression": -1,
              "ObjectExpressionClosingBrace": ">=2",
              "Property": ">=1",
              "ReturnStatement": ">=1",
              "SwitchOpeningBrace": 0,
              "SwitchClosingBrace": ">=1",
              "ThisExpression": -1,
              "ThrowStatement": ">=1",
              "TryOpeningBrace": 0,
              "TryClosingBrace": ">=1",
              "VariableName": ">=1",
              "VariableValue": 0,
              "VariableDeclaration": ">=1",
              "VariableDeclarationWithoutInit": ">=1",
              "WhileStatement": ">=1",
              "WhileStatementOpeningBrace": 0,
              "WhileStatementClosingBrace": ">=1"
            },

            "after": {
              "AssignmentExpression": ">=1",
              "AssignmentOperator": 0,
              "BlockStatement": 0,
              "CallExpression": -1,
              "CatchOpeningBrace": ">=1",
              "CatchClosingBrace": ">=0",
              "ConditionalExpression": ">=1",
              "DeleteOperator": ">=1",
              "DoWhileStatement": ">=1",
              "DoWhileStatementOpeningBrace": ">=1",
              "DoWhileStatementClosingBrace": 0,
              "EmptyStatement": -1,
              "FinallyOpeningBrace": ">=1",
              "FinallyClosingBrace": ">=1",
              "ForInStatement": ">=1",
              "ForInStatementExpressionOpening": "<2",
              "ForInStatementExpressionClosing": -1,
              "ForInStatementOpeningBrace": ">=1",
              "ForInStatementClosingBrace": ">=1",
              "ForStatement": ">=2",
              "ForStatementExpressionOpening": "<2",
              "ForStatementExpressionClosing": -1,
              "ForStatementOpeningBrace": ">=1",
              "ForStatementClosingBrace": ">=1",
              "FunctionExpression": ">=1",
              "FunctionExpressionOpeningBrace": ">=1",
              "FunctionExpressionClosingBrace": -1,
              "FunctionDeclaration": ">=1",
              "FunctionDeclarationOpeningBrace": ">=1",
              "FunctionDeclarationClosingBrace": ">=1",
              "IfStatement": ">=1",
              "IfStatementOpeningBrace": ">=1",
              "IfStatementClosingBrace": ">=1",
              "ElseIfStatement": ">=1",
              "ElseIfStatementOpeningBrace": ">=1",
              "ElseIfStatementClosingBrace": ">=1",
              "ElseStatement": ">=1",
              "ElseStatementOpeningBrace": ">=1",
              "ElseStatementClosingBrace": ">=1",
              "LogicalExpression": -1,
              "ObjectExpressionOpeningBrace": ">=1",
              "Property": 0,
              "ReturnStatement": -1,
              "SwitchOpeningBrace": ">=1",
              "SwitchClosingBrace": ">=1",
              "ThisExpression": 0,
              "ThrowStatement": ">=1",
              "TryOpeningBrace": ">=1",
              "TryClosingBrace": 1,
              "VariableDeclaration": ">=1",
              "EmptyStatement": 2,
              "WhileStatement": ">=1",
              "WhileStatementOpeningBrace": ">=1",
              "WhileStatementClosingBrace": ">=1"
            }
        },

        "whiteSpace": {
            "value": " ",
            "removeTrailing": 1,

            "before": {
              "ArrayExpressionOpening": 0,
              "ArrayExpressionClosing": 0,
              "ArrayExpressionComma": 0,
              "ArgumentComma": 0,
              "ArgumentList": 0,
              "ArgumentListArrayExpression": 0,
              "ArgumentListFunctionExpression": 0,
              "ArgumentListObjectExpression": 0,
              "AssignmentOperator": 1,
              "BinaryExpression": 0,
              "BinaryExpressionOperator": 1,
              "BlockComment": 1,
              "CallExpression": -1,
              "CatchParameterList": 0,
              "CatchOpeningBrace": 1,
              "CatchClosingBrace": 1,
              "CommaOperator": 0,
              "ConditionalExpressionConsequent": 1,
              "ConditionalExpressionAlternate": 1,
              "DoWhileStatementOpeningBrace": 1,
              "DoWhileStatementClosingBrace": 1,
              "DoWhileStatementConditional": 1,
              "EmptyStatement": 0,
              "ExpressionClosingParentheses": 0,
              "FinallyOpeningBrace": 1,
              "FinallyClosingBrace": 1,
              "ForInStatement": 1,
              "ForInStatementExpressionOpening": 1,
              "ForInStatementExpressionClosing": 0,
              "ForInStatementOpeningBrace": 1,
              "ForInStatementClosingBrace": 1,
              "ForStatement": 1,
              "ForStatementExpressionOpening": 1,
              "ForStatementExpressionClosing": 0,
              "ForStatementOpeningBrace": 1,
              "ForStatementClosingBrace": 1,
              "ForStatementSemicolon": 0,
              "FunctionDeclarationOpeningBrace": 1,
              "FunctionDeclarationClosingBrace": 1,
              "FunctionExpressionOpeningBrace": 1,
              "FunctionExpressionClosingBrace": 1,
              "IfStatementConditionalOpening": 1,
              "IfStatementConditionalClosing": 0,
              "IfStatementOpeningBrace": 1,
              "IfStatementClosingBrace": 1,
              "ElseStatementOpeningBrace": 1,
              "ElseStatementClosingBrace": 1,
              "ElseIfStatementOpeningBrace": 1,
              "ElseIfStatementClosingBrace": 1,
              "MemberExpressionClosing": 0,
              "LineComment": 1,
              "LogicalExpressionOperator": 1,
              "Property": 1,
              "PropertyValue": 1,
              "ParameterComma": 0,
              "ParameterList": 0,
              "SwitchDiscriminantOpening": 1,
              "SwitchDiscriminantClosing": 0,
              "ThrowKeyword": 1,
              "TryOpeningBrace": 1,
              "TryClosingBrace": 1,
              "UnaryExpressionOperator": 0,
              "VariableName": 1,
              "VariableValue": 1,
              "WhileStatementConditionalOpening": 1,
              "WhileStatementConditionalClosing": 0,
              "WhileStatementOpeningBrace": 1,
              "WhileStatementClosingBrace": 1
            },

            "after": {
              "ArrayExpressionOpening": 0,
              "ArrayExpressionClosing": 0,
              "ArrayExpressionComma": 1,
              "ArgumentComma": 1,
              "ArgumentList": 0,
              "ArgumentListArrayExpression": 0,
              "ArgumentListFunctionExpression": 0,
              "ArgumentListObjectExpression": 0,
              "AssignmentOperator": 1,
              "BinaryExpression": 0,
              "BinaryExpressionOperator": 1,
              "BlockComment": 1,
              "CallExpression": 0,
              "CatchParameterList": 0,
              "CatchOpeningBrace": 1,
              "CatchClosingBrace": 1,
              "CommaOperator": 1,
              "ConditionalExpressionConsequent": 1,
              "ConditionalExpressionTest": 1,
              "DoWhileStatementOpeningBrace": 1,
              "DoWhileStatementClosingBrace": 1,
              "DoWhileStatementBody": 1,
              "EmptyStatement": 0,
              "ExpressionOpeningParentheses": 0,
              "FinallyOpeningBrace": 1,
              "FinallyClosingBrace": 1,
              "ForInStatement": 1,
              "ForInStatementExpressionOpening": 0,
              "ForInStatementExpressionClosing": 1,
              "ForInStatementOpeningBrace": 1,
              "ForInStatementClosingBrace": 1,
              "ForStatement": 1,
              "ForStatementExpressionOpening": 0,
              "ForStatementExpressionClosing": 1,
              "ForStatementClosingBrace": 1,
              "ForStatementOpeningBrace": 1,
              "ForStatementSemicolon": 1,
              "FunctionReservedWord": 1,
              "FunctionName": 0,
              "FunctionExpressionOpeningBrace": 1,
              "FunctionExpressionClosingBrace": 0,
              "FunctionDeclarationOpeningBrace": 1,
              "FunctionDeclarationClosingBrace": 1,
              "IfStatementConditionalOpening": 0,
              "IfStatementConditionalClosing": 1,
              "IfStatementOpeningBrace": 1,
              "IfStatementClosingBrace": 1,
              "ElseStatementOpeningBrace": 1,
              "ElseStatementClosingBrace": 1,
              "ElseIfStatementOpeningBrace": 1,
              "ElseIfStatementClosingBrace": 1,
              "MemberExpressionOpening": 0,
              "LogicalExpressionOperator": 1,
              "ObjectExpressionClosingBrace": 0,
              "PropertyName": 0,
              "PropertyValue": 0,
              "ParameterComma": 1,
              "ParameterList": 0,
              "SwitchDiscriminantOpening": 0,
              "SwitchDiscriminantClosing": 1,
              "ThrowKeyword": 1,
              "TryOpeningBrace": 1,
              "TryClosingBrace": 1,
              "UnaryExpressionOperator": 0,
              "VariableName": 1,
              "WhileStatementConditionalOpening": 0,
              "WhileStatementConditionalClosing": 1,
              "WhileStatementOpeningBrace": 1,
              "WhileStatementClosingBrace": 1
            }
        }
    },
    "et": {
        "env": {
            "browser": true,
            "amd": true,
            "jasmine": true,
            "node": true
        },

        "globals": {
            "baidu": true,
            "T": true,
            "$": true,
            "jQuery": true,
            "goog": true,
            "fis": true,
            "angular": true,
            "setImmediate": true,
            "ActiveXObject": true,
            "unescape": true,
            "escape": true
        },

        "rules": {
            "indent":  4,
            "valid-jsdoc": 2,
            "max-statements": [1, 10],
            "one-var": 2,
            "key-spacing": [2, {"beforeColon": false, "afterColon": true, "align": "colon"}],
            "eol-last": 2,
            "camelcase": 2,
            "space-infix-ops": 2,
            "dot-notation": [2, {"allowKeywords": true}],
            "no-reserved-keys": 2,
            "quote-props": 2,
            "no-console": 1,
            "no-constant-condition": 1,
            "no-comma-dangle": 2,
            "no-debugger": 2,
            "no-dupe-keys": 1,
            "no-empty-class": 2,
            "no-ex-assign": 2,
            "no-extra-boolean-cast": 1,
            "no-extra-semi": 2,
            "no-func-assign": 1,
            "no-inner-declarations": 1,
            "no-invalid-regexp": 2,
            "no-negated-in-lhs": 2,
            "no-obj-calls": 2,
            "no-sparse-arrays": 2,
            "no-unreachable": 2,
            "use-isnan": 2,

            "valid-typeof": 2,

            "curly": [2, "all"],
            "eqeqeq": [2, "allow-null"],
            "guard-for-in": 1,
            "no-else-return": 1,
            "no-empty-label": 1,
            "no-eval": 1,
            "no-extend-native": 2,
            "no-extra-bind": 1,
            "no-implied-eval": 1,
            "no-iterator": 2,
            "no-irregular-whitespace": 1,
            "no-lone-blocks": 1,
            "no-loop-func": 1,
            "no-multi-str": 1,
            "no-native-reassign": 2,
            "no-new-wrappers": 2,
            "no-octal": 1,
            "no-octal-escape": 1,
            "no-proto": 2,
            "no-redeclare": 1,
            "no-self-compare": 2,
            "no-with": 1,
            "radix": 2,
            "wrap-iife": [2, "any"],

            "no-delete-var": 1,
            "no-label-var": 1,
            "no-shadow-restricted-names": 2,
            "no-undef": 2,
            "no-undef-init": 1,
            "no-unused-vars": [1, {"vars": "local", "args": "none"}],
            "no-use-before-define": [2, "nofunc"],

            "brace-style": [1, "stroustrup", {}],
            "comma-spacing": [2, {"before": false, "after": true}],
            "comma-style": [2, "last"],
            "new-cap": 2,
            "new-parens": 1,
            "no-array-constructor": 2,
            "no-new-object": 2,
            "no-spaced-func": 2,
            "no-space-before-semi": 2,
            "no-trailing-spaces": 2,
            "no-wrap-func": 2,
            "no-mixed-spaces-and-tabs": 2,
            "quotes": [2, "single"],
            "semi": [2, "always"],
            "space-after-keywords": [2, "always"],
            "space-before-function-parentheses": [2, {"anonymous": "always", "named": "never"}],
            "space-before-blocks": [2, "always"],
            "space-in-brackets": [2, "never"],
            "space-in-parens": [2, "never"],
            "space-return-throw-case": 1,
            "space-unary-ops": 1,
            "spaced-line-comment": [2, "always", {"exceptions": ["-", "+", ""]}],
            "max-nested-callbacks": [1, 3],

            "max-depth": [1, 6],
            "max-len": [2, 120, 4],
            "max-params": [1, 6]
        }
    }


}