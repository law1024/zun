{
  "name": "zun",
  "version": "1.0.3",
  "description": "前端代码格式化工具",
  "dependencies": {
    "colors": "^1.1.0",
    "cssbeautify": "^0.3.1",
    "csscomb": "^3.0.4",
    "esformatter": "^0.6.1",
    "fixmyjs": "^1.0.3",
    "htmlcs": "0.0.8",
    "js-beautify": "^1.5.5",
    "minimist": "^1.1.1",
    "through2": "^0.6.5",
    "vinyl-fs": "^1.0.0"
  },
  "readme": "# zun\r\n\r\n百度前端代码格式化工具\r\n\r\n### 为什么要有这个工具\r\n\r\n百度是一家对内部编码风格要求十分严格的公司，并将于近期实行代码强制检查制度，不符合编码规范的代码不能被提交svn。所以，解决如何快速的对代码进行编码风格格式化成为了当务之急。公司官方提供了一个格式化代码工具 [https://github.com/ecomfe/fecs](fecs)，然而在实际使用中发现，该工具并不理想，经常有报错并异常退出的情况，无法投入正常使用。\r\n之所以起名叫zun......这是一个梗。\r\n\r\n### 安装\r\n\r\n```\r\n    $[sudo] npm i zun -g\r\n```\r\n### 使用\r\n\r\n该工具默认只对代码模块中新添加的和有修改的文件进行格式化处理，所以请确保当前目录是在svn的管理之下。同时，默认采取原文件覆盖模式。\r\n\r\n```\r\n    $[sudo] zun format(f)\r\n```\r\n\r\n只对新增文件格式化：\r\n\r\n```\r\n    $[sudo] zun format --nomodify\r\n```\r\n\r\n强制对所有文件进行格式化：\r\n\r\n```\r\n    $[sudo] zun format --all\r\n```\r\n\r\n强制取消变量命名规范检查（开发中）\r\n\r\n```\r\n    $[sudo] zun format --icc\r\n```\r\n\r\n指定输出路径，没有最后一个参数则默认为当前目录下的output目录：\r\n\r\n```\r\n    $[sudo] zun format --directory your_directory\r\n```\r\n\r\n提交代码评审（此命令需配置zun-conf.json）：\r\n\r\n```\r\n    $[sudo] zun cooder\r\n```\r\n\r\n#### zun-conf.json说明\r\n\r\n在当前活动路径下配置zun-conf.json文件，该文件提供了两个功能：对不需要格式化的文件（jquery等第三方文件）进行配置；设置cooder命令的详细内容。\r\n\r\n```\r\n{\r\n    \"cooder\": {\r\n        \"subject\"    : \"code review\",\r\n        \"owner\"      : \"wanghaojie01\",\r\n        \"reviewers\"  : \"wanghaojie01\",\r\n        \"description\": \"code review\",\r\n        \"token\"      : \"the token\"\r\n    },\r\n    \"ignore\": [\r\n        \"/static/js/core/*.js\",\r\n        \"/static/css/reset.css\"\r\n    ]\r\n}\r\n```\r\n\r\n该工具还在不断的完善之中，有好的意见或建议，欢迎提出。",
  "readmeFilename": "README.md",
  "gitHead": "2f9d17ffa0b3a6fa864414649a573ba0277afaa1",
  "_id": "zun@1.0.3",
  "scripts": {},
  "_shasum": "dad820abc51eba2c61e33e37574872c099493154",
  "_from": "zun@*"
}
