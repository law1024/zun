{
  "name": "html-code-gen",
  "version": "0.3.2",
  "description": "html-code-gen ========",
  "main": "index.js",
  "browserify": "index.js",
  "dependencies": {},
  "devDependencies": {
    "browserify": "^8.1.1",
    "coveralls": "^2.11.2",
    "htmlcs": "0.0.3",
    "istanbul": "^0.3.2",
    "jasmine-node": "^1.14.5",
    "uglify-js": "^2.4.16"
  },
  "scripts": {
    "browserify": "browserify ./index.js -s html-code-gen -o browser/html-code-gen.js",
    "uglify": "uglifyjs browser/html-code-gen.js -o browser/html-code-gen.min.js",
    "browser": "npm run browserify && npm run uglify",
    "test": "istanbul cover jasmine-node --captureExceptions test/**/*.spec.js",
    "coveralls": "cat ./coverage/lcov.info | coveralls"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nighca/html-code-gen.git"
  },
  "keywords": [],
  "author": {
    "name": "Hanxing Yang",
    "email": "nighca@live.cn",
    "url": "https://github.com/nighca"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nighca/html-code-gen/issues"
  },
  "homepage": "https://github.com/nighca/html-code-gen",
  "readme": "html-code-gen\n========\n\n[![Build Status](https://travis-ci.org/nighca/html-code-gen.svg)](http://travis-ci.org/nighca/html-code-gen)\n[![NPM version](https://badge.fury.io/js/html-code-gen.svg)](http://badge.fury.io/js/html-code-gen)\n[![Coverage Status](https://coveralls.io/repos/nighca/html-code-gen/badge.svg?branch=master)](https://coveralls.io/r/nighca/html-code-gen?branch=master)\n[![Dependencies](http://img.shields.io/david/nighca/html-code-gen.svg?style=flat-square)](https://david-dm.org/nighca/html-code-gen)\n[![DevDependencies](http://img.shields.io/david/dev/nighca/html-code-gen.svg?style=flat-square)](https://david-dm.org/nighca/html-code-gen)\n\nhtml-code-gen is a HTML-code generator. It generates HTML code with given dom(-like) object.\n\n### Install\n\n* nodejs\n\n\t\tnpm install html-code-gen\n\n\n\t```javascript\n\tvar htmlCodeGen = require('html-code-gen');\n\t```\n\n* browser (UMD bundle generated by browserify)\n\n\t* global\n\n\t\t```html\n\t\t<script src=\"html-code-gen/browser/html-code-gen.min.js\"></script>\n\t\t```\n\n\t\t```javascript\n\t\tvar htmlCodeGen = window.htmlCodeGen;\n\t\t```\n\n\t* AMD\n\n\t\t```javascript\n\t\tvar htmlCodeGen = require('html-code-gen');\n\t\t```\n\n### Usage\n\n```javascript\nvar output = htmlCodeGen.print(dom, opt);\n```\n\n### Options\n\n* `indent-size`: size of indent\n\n\tdefault: `4`\n\n* `indent-char`: char of indent ( space / tab )\n\n\tdefault: `'space'`\n\n* `max-char`: max char num in one line (TODO)\n\n\tdefault: `80`\n\n* `no-format-tag`: tags whose content should not be formatted\n\n\tdefault: [`spec.tagTypeMap.structural`](./lib/spec.js#L26)\n\n* `no-format`: no format\n\n\tdefault: `false`\n\n* `inline-tag`: tags whose content should be inline\n\n\tdefault: [`spec.tagTypeMap.inline`](./lib/spec.js#L25)\n\n* `formatter`: special formatters { tagName ( script / style ) : formater )\n\n\tdefault: `{}`\n\n* `bool-attribute-value`: hide value of boolean attribute or not ( 'remove' / 'preserve' )\n\n\tdefault: `'remove'`,\n\n* `level`: current level\n\n\tdefault: `0`\n\n### Development\n\n* run test cases\n\n\t\tnpm run test\n\n* build for browser\n\n\t\tnpm run browser",
  "readmeFilename": "README.md",
  "_id": "html-code-gen@0.3.2",
  "_from": "html-code-gen@>=0.3.2 <0.4.0"
}
